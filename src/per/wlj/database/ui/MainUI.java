/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package per.wlj.database.ui;

import java.util.Map;
import sun.misc.VM;


/**
 *
 * @author Will32
 */
public class MainUI extends javax.swing.JFrame {

	private static final long serialVersionUID = 579751606517327908L;
	private static MainUI instance = null;
    
    /**
     * Creates new form MainUI
     */
    public MainUI() {
        initComponents();
        this.ddlPanel2.setVisible(false);
        this.dataImportPanel1.setVisible(false);
        database.setVisible(false);
        this.setSize(800, 500);
    }
    
    public static MainUI getInstance(){
        if(null == instance) instance = new MainUI();
        return instance;
    }
    
    private javax.swing.JLayeredPane face = null;
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void initComponents() {

        logPanel1 = new per.wlj.database.ui.util.LogPanel(); 			//日志组件
        jPanel1 = new javax.swing.JPanel();					 			//DDL和EXPORT面板容器
        face = new javax.swing.JLayeredPane();
        javax.swing.JLabel f = new javax.swing.JLabel();
        f.setText("cqmyg,\nysdss,\njtwmy,\ndtsgx.\n");
        face.add(f);
        
        database = new per.wlj.database.ui.DatabaseUI();
        dataImportPanel1 = new per.wlj.database.ui.DataExport();	//EXPORT面板
        ddlPanel2 = new per.wlj.database.ui.DdlPanel();					//DDL面板
        jToolBar2 = new javax.swing.JToolBar();							//jPanel1工具栏
        jButton1 = new javax.swing.JButton();							//显示DDL面板按钮
        jButton2 = new javax.swing.JButton();							//显示EXPORT面板按钮
        jButton3 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();							//主窗口菜单栏
        jMenu1 = new javax.swing.JMenu();								//file

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.add(face);
        jPanel1.add(dataImportPanel1);
        jPanel1.add(ddlPanel2);
        jPanel1.add(database);
        //jPanel1.setBackground(new Color(0, 0, 0));
        
        
        
        jToolBar2.setRollover(true);
        
        jButton3.setText("database");
        jButton3.setFocusable(false);
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jToolBar2.add(jButton3);

        jButton1.setText("ddl");
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        
        jToolBar2.add(jButton1);

        jButton2.setText("export");
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jToolBar2.add(jButton2);

        
        
        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane()); //主面板布局对象
        getContentPane().setLayout(layout);												//
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(10)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jToolBar2)
                        .addComponent(jPanel1)
                        .addComponent(logPanel1)
                        )
                )
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(
            		javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            		.addComponent(jToolBar2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
            		.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
            		.addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
            		.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            		.addComponent(logPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
             )
        );

        pack();
    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
        this.showDDL();        
    }

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {
        this.showExport();        
    }

      private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {
        this.showDatabase();        
    }
    
    public void showExport(){
        this.ddlPanel2.setVisible(false);
        this.dataImportPanel1.setVisible(true);
        face.setVisible(false);
        database.setVisible(false);
    }
    
    public void showDDL(){
         this.ddlPanel2.setVisible(true);
        this.dataImportPanel1.setVisible(false);
        face.setVisible(false);
        database.setVisible(false);
    }
    
    public void showDatabase(){
        this.ddlPanel2.setVisible(false);
        this.dataImportPanel1.setVisible(false);
        face.setVisible(false);
        database.setVisible(true);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
    	System.out.println(VM.maxDirectMemory()/1024/1024);
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               MainUI mui = MainUI.getInstance();
               mui.setVisible(true);
            }
        });
    }

    private per.wlj.database.ui.DataExport dataImportPanel1;
    private per.wlj.database.ui.DdlPanel ddlPanel2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;                   
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JToolBar jToolBar2;
    private per.wlj.database.ui.util.LogPanel logPanel1;
    private per.wlj.database.ui.DatabaseUI database;
    
    public static void log(String log){
        if(null != instance){
            instance.logPanel1.appendLog(log);
        }
    }
    
    public static Map<String, String> dbInfomations(){
        if(null != instance)
            return instance.database.getDBInformations();
        else return null;
    }

}
